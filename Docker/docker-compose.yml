services:
  db:
    image: postgres:16.3
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - db:/var/lib/postgresql/data
    networks:
      - proxy
    hostname: db
      
  nats:
    image: nats:2.10
    volumes:
       - ./NATS/config/:/etc/nats
    environment:
      NATS_USER: ${NATS_USER}
      NATS_PASSWORD: ${NATS_PASSWORD}
    command: "-c /etc/nats/nats.conf"
    restart: unless-stopped
    networks:
      - proxy
    hostname: nats

  banque:
    build:
      context: ../
      dockerfile: ./Docker-test/NATS/banque/Dockerfile
    environment:
      DJANGO_ENVIRONMENT: ${DJANGO_ENVIRONMENT}
      NATS_USER: ${NATS_USER}
      NATS_PASSWORD: ${NATS_PASSWORD} 
    volumes:
      - banque:/app/data
    restart: unless-stopped
    networks:
      - proxy
    hostname: banque
    depends_on:
      - nats

  valid:
    build:
      context: ../
      dockerfile: ./Docker-test/NATS/valid/Dockerfile
    environment:
      DJANGO_ENVIRONMENT: ${DJANGO_ENVIRONMENT}
      NATS_USER: ${NATS_USER}
      NATS_PASSWORD: ${NATS_PASSWORD} 
    volumes:
      - valid:/app/data
    restart: unless-stopped
    networks:
      - proxy
    hostname: valid
    depends_on:
      - nats

  django_api:
    build:
      context: ../
      dockerfile: ./Docker-test/API/Dockerfile
    environment:
      DOMAIN: ${DOMAIN}
      DJANGO_ENVIRONMENT: ${DJANGO_ENVIRONMENT}
      DJANGO_DB_NAME: ${POSTGRES_DB}
      DJANGO_DB_USER: ${POSTGRES_USER}
      DJANGO_DB_PASSWORD: ${POSTGRES_PASSWORD}
      DJANGO_DB_HOST: db  # This is the hostname in docker-compose
      DJANGO_DB_PORT: 5432
    volumes:
      - ../Django_api/:/app
    restart: unless-stopped
    networks:
      - proxy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.django_api.rule=Host(`api.${DOMAIN}`)"
      - "traefik.http.routers.django_api.entrypoints=websecure"
      - "traefik.http.routers.django_api.tls=true"
      - "traefik.http.routers.django_api_http.rule=Host(`api.${DOMAIN}`)"
      - "traefik.http.routers.django_api_http.entrypoints=web"
      - "traefik.http.routers.django_api_http.middlewares=redirect-to-https@file"
      - "traefik.http.services.django_api.loadbalancer.server.url=http://django_api:80"
    hostname: django-api
    depends_on:
      - banque
      - valid

  django_frontend:
    build: 
      context: ../
      dockerfile: ./Docker-test/Frontend/Django/Dockerfile
    environment:
      DOMAIN: ${DOMAIN}
      DJANGO_ENVIRONMENT: ${DJANGO_ENVIRONMENT}
      DJANGO_DB_NAME: ${POSTGRES_DB}
      DJANGO_DB_USER: ${POSTGRES_USER}
      DJANGO_DB_PASSWORD: ${POSTGRES_PASSWORD}
      DJANGO_DB_HOST: db  # This is the hostname in docker-compose
      DJANGO_DB_PORT: 5432
      DJANGO_SUPERUSER_USERNAME: ${DJANGO_SUPERUSER_USERNAME}
      DJANGO_SUPERUSER_EMAIL: ${DJANGO_SUPERUSER_EMAIL}
      DJANGO_SUPERUSER_PASSWORD: ${DJANGO_SUPERUSER_PASSWORD}
    volumes:
      - ../Django_Frontend/:/app
      - static:/app/monprojet/monapp/static
    restart: unless-stopped
    networks:
     - proxy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.django_frontend.rule=Host(`${DOMAIN}`)"
      - "traefik.http.routers.django_frontend.entrypoints=websecure"
      - "traefik.http.routers.django_frontend.tls=true"
      - "traefik.http.routers.django_frontend_http.rule=Host(`${DOMAIN}`)"
      - "traefik.http.routers.django_frontedn_http.entrypoints=web"
      - "traefik.http.routers.django_frontedn_http.middlewares=redirect-to-https@file"
      - "traefik.http.services.django_frontend.loadbalancer.server.url=http://django_frontend:80"
    hostname: django-frontend
    depends_on:
     - django_api
  
  nginx:
    build: ./Frontend/Nginx
    volumes:
      - static:/usr/share/nginx/html/static
    restart: unless-stopped
    networks:
      - proxy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.nginx_static.rule=Host(`${DOMAIN}`) && PathPrefix(`/static/`)"
      - "traefik.http.routers.nginx_static.entrypoints=websecure"
      - "traefik.http.routers.nginx_static.tls=true"
      - "traefik.http.services.nginx_static.loadbalancer.server.port=80"
    hostname: nginx
    depends_on:
      - "django_frontend"
  
  openssl:
    build:
      context: ./traefik/certs_builder
      dockerfile: Dockerfile
      args:
        - DOMAIN=${DOMAIN}
    volumes:
      - certs:/certs

  traefik:
    image: traefik:3.0
    environment:
      DOMAIN: ${DOMAIN}
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./traefik/traefik.yml:/traefik.yml
      - ./traefik/dynamic_conf.yml:/dynamic_conf.yml
      - certs:/certs
    networks:
      - proxy
    restart: unless-stopped
    depends_on:
      - openssl
      - django_frontend

volumes:
  db:
  valid:
  banque:
  static:
  certs:

networks:
  proxy:
